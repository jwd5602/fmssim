//
// File generated by rootcint at Thu Jan 12 15:52:52 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SimGenDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SimGenDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void EventLoop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_EventLoop(void *p);
   static void deleteArray_EventLoop(void *p);
   static void destruct_EventLoop(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventLoop*)
   {
      ::EventLoop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventLoop >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventLoop", ::EventLoop::Class_Version(), "./EventLoop.h", 20,
                  typeid(::EventLoop), DefineBehavior(ptr, ptr),
                  &::EventLoop::Dictionary, isa_proxy, 4,
                  sizeof(::EventLoop) );
      instance.SetDelete(&delete_EventLoop);
      instance.SetDeleteArray(&deleteArray_EventLoop);
      instance.SetDestructor(&destruct_EventLoop);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventLoop*)
   {
      return GenerateInitInstanceLocal((::EventLoop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventLoop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *EventLoop::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EventLoop::Class_Name()
{
   return "EventLoop";
}

//______________________________________________________________________________
const char *EventLoop::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventLoop::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventLoop::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventLoop::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventLoop*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void EventLoop::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventLoop.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventLoop::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventLoop::Class(),this);
   }
}

//______________________________________________________________________________
void EventLoop::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventLoop.
      TClass *R__cl = ::EventLoop::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_arr[2147483647]", vx_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy_arr[2147483647]", vy_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz_arr[2147483647]", vz_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px_arr[2147483647]", px_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py_arr[2147483647]", py_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz_arr[2147483647]", pz_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_arr[2147483647]", E_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_arr[2147483647]", m_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmag_arr[2147483647]", pmag_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KS_arr[2147483647]", KS_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KF_arr[2147483647]", KF_arr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pythia", &pythia);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particles", &particles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*events", &events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmag", &pmag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KS", &KS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KF", &KF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PName[64]", PName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evt_num", &evt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nev", &nev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "macbase", &macbase);
      R__insp.InspectMember(macbase, "macbase.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "macrofile", &macrofile);
      R__insp.InspectMember(macrofile, "macrofile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventstring", &eventstring);
      R__insp.InspectMember(eventstring, "eventstring.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamingen", &etamingen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamaxgen", &etamaxgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmingen", &ptmingen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmaxgen", &ptmaxgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamincuts", &etamincuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etamaxcuts", &etamaxcuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmincuts", &ptmincuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptmaxcuts", &ptmaxcuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Emincuts", &Emincuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Emaxcuts", &Emaxcuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KLineFirst", &KLineFirst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JPsiAnalysis", &JPsiAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pi0Analysis", &Pi0Analysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JustTriggeredPi0", &JustTriggeredPi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JustTriggeredOther", &JustTriggeredOther);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "myfile", (void*)&myfile);
      R__insp.InspectMember("ofstream", (void*)&myfile, "myfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outstring", &outstring);
      R__insp.InspectMember(outstring, "outstring.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_EventLoop(void *p) {
      delete ((::EventLoop*)p);
   }
   static void deleteArray_EventLoop(void *p) {
      delete [] ((::EventLoop*)p);
   }
   static void destruct_EventLoop(void *p) {
      typedef ::EventLoop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventLoop

/********************************************************
* SimGenDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSimGenDict();

extern "C" void G__set_cpp_environmentSimGenDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("EventLoop.h");
  G__cpp_reset_tagtableSimGenDict();
}
#include <new>
extern "C" int G__cpp_dllrevSimGenDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* EventLoop */
static int G__SimGenDict_604_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventLoop* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventLoop((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) EventLoop((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SimGenDictLN_EventLoop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventLoop*) G__getstructoffset())->Start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventLoop*) G__getstructoffset())->horse_ramp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EventLoop*) G__getstructoffset())->GetEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EventLoop*) G__getstructoffset())->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventLoop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventLoop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventLoop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventLoop::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventLoop*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventLoop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventLoop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventLoop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SimGenDict_604_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventLoop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventLoop G__TEventLoop;
static int G__SimGenDict_604_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventLoop*) (soff+(sizeof(EventLoop)*i)))->~G__TEventLoop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventLoop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventLoop*) (soff))->~G__TEventLoop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* EventLoop */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSimGenDict {
 public:
  G__Sizep2memfuncSimGenDict(): p(&G__Sizep2memfuncSimGenDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSimGenDict::*p)();
};

size_t G__get_sizep2memfuncSimGenDict()
{
  G__Sizep2memfuncSimGenDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSimGenDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop))) {
     EventLoop *G__Lderived;
     G__Lderived=(EventLoop*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop),G__get_linked_tagnum(&G__SimGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSimGenDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EventLoop */
static void G__setup_memvarEventLoop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop));
   { EventLoop *p; p=(EventLoop*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->vx_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"vx_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"vy_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"vz_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"px_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"py_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"pz_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->E_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"E_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"m_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmag_arr)-(long)(p)),100,0,0,-1,-1,-1,1,"pmag_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KS_arr)-(long)(p)),105,0,0,-1,-1,-1,1,"KS_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KF_arr)-(long)(p)),105,0,0,-1,-1,-1,1,"KF_arr[]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pythia)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TPythia6),-1,-1,1,"pythia=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particles)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClonesArray),-1,-1,1,"particles=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->events)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TTree),-1,-1,1,"events=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"vz=",0,"Location of particle");
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"px=",0,"P(I,1) - x momentum (GeV/c)");
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"py=",0,"P(I,2) - y momentum (GeV/c)");
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pz=",0,"P(I,3) - z momentum (GeV/c)");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"E=",0,"P(I,4) - energy (GeV)");
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmag)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pmag=",0,"magnitude of momentum");
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KS)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KS=",0,"Status code >10 means particle does not exist at end");
   G__memvar_setup((void*)((long)(&p->KF)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KF=",0,"Particle ID code.");
   G__memvar_setup((void*)((long)(&p->PName)-(long)(p)),99,0,0,-1,-1,-1,1,"PName[64]=",0,"holds name of particle temporarily");
   G__memvar_setup((void*)((long)(&p->evt_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evt_num=",0,"dummy variable to iterate in particle name");
   G__memvar_setup((void*)((long)(&p->nev)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nev=",0,"number of events");
   G__memvar_setup((void*)((long)(&p->macbase)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"macbase=",0,"directory with macros + \"macro\"");
   G__memvar_setup((void*)((long)(&p->macrofile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"macrofile=",0,"combination of macbase + evt_num + .mac");
   G__memvar_setup((void*)((long)(&p->eventstring)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"eventstring=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etamingen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamingen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etamaxgen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamaxgen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmingen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmingen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmaxgen)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmaxgen=",0,"Used for gen");
   G__memvar_setup((void*)((long)(&p->etamincuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamincuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etamaxcuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"etamaxcuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmincuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmincuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptmaxcuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ptmaxcuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Emincuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Emincuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Emaxcuts)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Emaxcuts=",0,"Used for cuts");
   G__memvar_setup((void*)((long)(&p->KLineFirst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"KLineFirst=",0,"BS. Using For JPsi this will give the first daughter, which for Jpsi will be eithier e+ or e-, with the other on the next line");
   G__memvar_setup((void*)((long)(&p->JPsiAnalysis)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"JPsiAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pi0Analysis)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"Pi0Analysis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JustTriggeredPi0)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"JustTriggeredPi0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JustTriggeredOther)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"JustTriggeredOther=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->myfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,1,"myfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outstring)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TString),-1,-1,1,"outstring=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SimGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSimGenDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEventLoop(void) {
   /* EventLoop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SimGenDictLN_EventLoop));
   G__memfunc_setup("EventLoop",924,G__SimGenDict_604_0_1, 105, G__get_linked_tagnum(&G__SimGenDictLN_EventLoop), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nEvents f - 'Float_t' 0 - sqrts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Start",526,G__SimGenDict_604_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("horse_ramp",1072,G__SimGenDict_604_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvents",917,G__SimGenDict_604_0_4, 85, G__get_linked_tagnum(&G__SimGenDictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticles",1223,G__SimGenDict_604_0_5, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SimGenDict_604_0_6, 85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventLoop::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SimGenDict_604_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventLoop::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SimGenDict_604_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventLoop::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SimGenDict_604_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventLoop::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SimGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SimGenDict_604_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SimGenDict_604_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventLoop::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SimGenDict_604_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventLoop::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SimGenDict_604_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventLoop::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SimGenDict_604_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventLoop::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EventLoop", 1050, G__SimGenDict_604_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSimGenDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSimGenDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSimGenDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SimGenDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SimGenDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_TPythia6 = { "TPythia6" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SimGenDictLN_EventLoop = { "EventLoop" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSimGenDict() {
  G__SimGenDictLN_TClass.tagnum = -1 ;
  G__SimGenDictLN_TBuffer.tagnum = -1 ;
  G__SimGenDictLN_TMemberInspector.tagnum = -1 ;
  G__SimGenDictLN_TObject.tagnum = -1 ;
  G__SimGenDictLN_TString.tagnum = -1 ;
  G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_TClonesArray.tagnum = -1 ;
  G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SimGenDictLN_TTree.tagnum = -1 ;
  G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_TPythia6.tagnum = -1 ;
  G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SimGenDictLN_EventLoop.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSimGenDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TString);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_TPythia6);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__SimGenDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SimGenDictLN_EventLoop),sizeof(EventLoop),-1,324608,(char*)NULL,G__setup_memvarEventLoop,G__setup_memfuncEventLoop);
}
extern "C" void G__cpp_setupSimGenDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSimGenDict()");
  G__set_cpp_environmentSimGenDict();
  G__cpp_setup_tagtableSimGenDict();

  G__cpp_setup_inheritanceSimGenDict();

  G__cpp_setup_typetableSimGenDict();

  G__cpp_setup_memvarSimGenDict();

  G__cpp_setup_memfuncSimGenDict();
  G__cpp_setup_globalSimGenDict();
  G__cpp_setup_funcSimGenDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSimGenDict();
  return;
}
class G__cpp_setup_initSimGenDict {
  public:
    G__cpp_setup_initSimGenDict() { G__add_setup_func("SimGenDict",(G__incsetup)(&G__cpp_setupSimGenDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSimGenDict() { G__remove_setup_func("SimGenDict"); }
};
G__cpp_setup_initSimGenDict G__cpp_setup_initializerSimGenDict;

